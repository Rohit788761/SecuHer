// Generated by view binder compiler. Do not edit!
package com.dreamprogramming.secuher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dreamprogramming.secuher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySelfDefenceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView attack;

  @NonNull
  public final CardView cardDefence;

  @NonNull
  public final CardView electricShock;

  @NonNull
  public final CardView gunAttack;

  @NonNull
  public final CardView gunDefence;

  @NonNull
  public final CardView knifeAttack;

  @NonNull
  public final CardView sprayDefence;

  private ActivitySelfDefenceBinding(@NonNull LinearLayout rootView, @NonNull CardView attack,
      @NonNull CardView cardDefence, @NonNull CardView electricShock, @NonNull CardView gunAttack,
      @NonNull CardView gunDefence, @NonNull CardView knifeAttack, @NonNull CardView sprayDefence) {
    this.rootView = rootView;
    this.attack = attack;
    this.cardDefence = cardDefence;
    this.electricShock = electricShock;
    this.gunAttack = gunAttack;
    this.gunDefence = gunDefence;
    this.knifeAttack = knifeAttack;
    this.sprayDefence = sprayDefence;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySelfDefenceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySelfDefenceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_self_defence, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySelfDefenceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attack;
      CardView attack = ViewBindings.findChildViewById(rootView, id);
      if (attack == null) {
        break missingId;
      }

      id = R.id.card_defence;
      CardView cardDefence = ViewBindings.findChildViewById(rootView, id);
      if (cardDefence == null) {
        break missingId;
      }

      id = R.id.electric_shock;
      CardView electricShock = ViewBindings.findChildViewById(rootView, id);
      if (electricShock == null) {
        break missingId;
      }

      id = R.id.gun_attack;
      CardView gunAttack = ViewBindings.findChildViewById(rootView, id);
      if (gunAttack == null) {
        break missingId;
      }

      id = R.id.gun_defence;
      CardView gunDefence = ViewBindings.findChildViewById(rootView, id);
      if (gunDefence == null) {
        break missingId;
      }

      id = R.id.knife_attack;
      CardView knifeAttack = ViewBindings.findChildViewById(rootView, id);
      if (knifeAttack == null) {
        break missingId;
      }

      id = R.id.spray_defence;
      CardView sprayDefence = ViewBindings.findChildViewById(rootView, id);
      if (sprayDefence == null) {
        break missingId;
      }

      return new ActivitySelfDefenceBinding((LinearLayout) rootView, attack, cardDefence,
          electricShock, gunAttack, gunDefence, knifeAttack, sprayDefence);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
